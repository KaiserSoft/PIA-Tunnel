#!/bin/bash
# script to monitor the tunnel connection and terminate or restart it if it fails
LANG=en_US.UTF-8
export LANG
source '/pia/settings.conf'
source '/pia/include/functions.inc'

echo "WARNING: pia-daemon is not done yet and may do unexpected things!"


# How it works
# *) pia-start initiates a connection
# *) this daemon script is startet which will send one ping every n seconds through the tunnel
# 	if the ping fails n times the tunnel is closed or restartet


# list of VPN connections to use, the first is awlays the primary
MYVPN[0]="Germany"
MYVPN[1]="Sweden"
MYVPN[2]="UK London"

# set action when VPN fails: terminate | failover
FAIL_ACTION="failover"
FAIL_RETRY=3
FAIL_RETRY_DELAY=2

# set timeinterval for checks in seconds. DO NOT SET THIS TOO LOW!
# script will send one ping every PING_INTERVAL seconds
PING_INTERVAL=60
PING_COMMAND="ping -qnw1c1 -I $IF_TUNNEL google.com 2>/dev/null | grep -c \"0% packet loss\""











# this is the outer endless loop #
##################################
while true; do
  #set proper values fro every run
  RET_PING=""

  
  ping_vpn
  if [ "$RET_PING" = "ERROR" ]; then
    #connection has failed
    for (( x=1 ; x <= FAIL_RETRY ; x++ ))
    do
	# ping again
	ping_vpn
	if [ "$RET_PING" = "OK" ]; then
	  #ping worked this time, back to normal
	  break
	fi
    done
  fi
  
  #check results and do something about it
  if [ "$RET_PING" = "ERROR" ]; then
    if [ "$FAIL_ACTION" = "failover" ]; then
      echo "VPN tunnel has failed - switching to backup."
      switch_vpn
    else
      #/pia/pia-stop
      #/pia/pia-forward stop quite
      echo "VPN tunnel has failed - connection terminated!"
    fi
  
  fi
  
  echo -e "[\e[1;32m ok \e[0m] "$(date +"%Y-%m-%d %H:%S")\
			" - VPN is up - next check in $PING_INTERVAL seconds..."
  sleep $PING_INTERVAL
done
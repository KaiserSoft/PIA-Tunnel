#!/bin/bash
# script to create links to the pia scripts and set permissions

LANG=en_US.UTF-8
export LANG

#set file permissions as needed
chmod 0750 /usr/local/pia
find /usr/local/pia -type d -exec chmod 0750 {} \;
find /usr/local/pia -type f -exec chmod 0640 {} \;

if [ "$CMD_GREP" = "" ]; then
    chmod u+x '/usr/local/pia/include/commands.sh'
    source '/usr/local/pia/include/commands.sh'
fi

if [ ! -f '/usr/local/pia/settings.conf' ]; then
    touch '/usr/local/pia/settings.conf';
fi

#create a fresh settings file or load existing
ret=$( "$CMD_GREP" -c "FORWARD_PORT_ENABLE" /usr/local/pia/settings.conf)
if [ "$ret" -eq 0 ]; then
    echo '#!/bin/bash' > '/usr/local/pia/settings.conf'
    echo 'LANG=en_US.UTF-8' >> '/usr/local/pia/settings.conf'
    echo 'export LANG' >> '/usr/local/pia/settings.conf'
    echo '' >> '/usr/local/pia/settings.conf'
    echo '' >> '/usr/local/pia/settings.conf'

	if [ -f '/usr/local/bin/gawk' ]; then
		#FreeBSD
		echo 'IF_EXT="em0"' >> '/usr/local/pia/settings.conf'
		echo 'IF_INT="em1"' >> '/usr/local/pia/settings.conf'
		echo 'IF_TUNNEL="tun0"' >> '/usr/local/pia/settings.conf'
		echo 'FIREWALL_IF_SSH[0]="em0"' >> '/usr/local/pia/settings.conf'
		echo 'FIREWALL_IF_WEB[0]="em0"' >> '/usr/local/pia/settings.conf'
		echo 'FIREWALL_IF_WEB[1]="em1"' >> '/usr/local/pia/settings.conf'
		echo 'WEB_UI_IF1="em0"' >> '/usr/local/pia/settings.conf'
		echo 'WEB_UI_IF2="em1"' >> '/usr/local/pia/settings.conf'
	else
		#Linux
		echo 'IF_EXT="eth0"' >> '/usr/local/pia/settings.conf'
		echo 'IF_INT="eth1"' >> '/usr/local/pia/settings.conf'
		echo 'IF_TUNNEL="tun0"' >> '/usr/local/pia/settings.conf'
		echo 'FIREWALL_IF_SSH[0]="eth0"' >> '/usr/local/pia/settings.conf'
		echo 'FIREWALL_IF_WEB[0]="eth0"' >> '/usr/local/pia/settings.conf'
		echo 'FIREWALL_IF_WEB[1]="eth1"' >> '/usr/local/pia/settings.conf'
		echo 'WEB_UI_IF1="eth0"' >> '/usr/local/pia/settings.conf'
		echo 'WEB_UI_IF2="eth1"' >> '/usr/local/pia/settings.conf'
	fi


    echo 'FORWARD_IP="192.168.10.100"' >> '/usr/local/pia/settings.conf'
    echo 'FORWARD_PORT_ENABLED="no"' >> '/usr/local/pia/settings.conf'
    echo 'FORWARD_PUBLIC_LAN="yes"' >> '/usr/local/pia/settings.conf'
    echo 'FORWARD_VM_LAN="yes"' >> '/usr/local/pia/settings.conf'
    echo '' >> '/usr/local/pia/settings.conf'
fi
source '/usr/local/pia/settings.conf'


#Now run setup to get settings back and apply permissions
chmod 0750 /usr/local/pia/set_permissions.sh
/usr/local/pia/set_permissions.sh


#add missing (new) settings to settings.conf
/usr/local/pia/include/fix_settings.sh

### add changes below this lines as settings.conf may not be upto date above



# move ip list from old to new location
if [ ! -f '/usr/local/pia/ip_list.txt' ] && [ -f '/usr/local/pia/cache/ip_list.txt' ]; then
    mv '/usr/local/pia/cache/ip_list.txt' '/usr/local/pia/ip_list.txt'
fi



#check ip cache
if [ ! -f '/usr/local/pia/ip_list.txt' ]; then
	echo -e "[info] "$(date +"%Y-%m-%d %H:%M:%S")\
	  "- ip_list.txt does not exist - rebuilding!"
	echo -e "\tthis will take a couple of minutes...."
	/usr/local/pia/include/build_ping_list.sh
fi


#update files in $HTDOCS_PATH
source '/usr/local/pia/settings.conf'
cp -r /usr/local/pia/htdocs/* "$HTDOCS_PATH/"
if [ -f "$HTDOCS_PATH/README.txt" ]; then rm -f "$HTDOCS_PATH/README.txt"; fi
if [ -f "$HTDOCS_PATH/monitor-windows.zip" ]; then rm -f "$HTDOCS_PATH/monitor-windows.zip" ; fi
cd /usr/local/pia/client_scripts ; zip -r "$HTDOCS_PATH/monitor-windows.zip" monitor-windows/ &> /dev/null
cp "/usr/local/pia/docs/PIA-Tunnel Documentation.pdf" "$HTDOCS_PATH/pia-tunnel_documentation.pdf" &> /dev/null
mkdir -p "$HTDOCS_PATH/docs/" ; cp -r "/usr/local/pia/docs/HTML Manual/"* "$HTDOCS_PATH/docs/"
chown -R "$APACHE_USER":"$APACHE_USER" "$HTDOCS_PATH/"
find /usr/local/pia/htdocs/ -type d -exec chmod 0750 {} \;
find /usr/local/pia/htdocs/ -type f -exec chmod 0640 {} \;

# clear webUI update cache
rm -rf "/usr/local/pia/cache/webui-update_status.txt"


# move login.conf to login-pia.conf
if [ -f '/usr/local/pia/login.conf' ]; then
  mv '/usr/local/pia/login.conf' '/usr/local/pia/login-pia.conf'
fi

# check if namespace in case this system has been reset with 'reset-pia'
# untested on FreeBSD ATM  2016-06-20
if [ "$WEB_UI_NAMESPACE" = "" ]; then
    WEB_UI_NAMESPACE=$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c12)
    $CMD_GREP -q 'WEB_UI_NAMESPACE' '/usr/local/pia/settings.conf'
    if [ $? -eq 0 ]; then
        /usr/local/pia/pia-settings 'WEB_UI_NAMESPACE' "$WEB_UI_NAMESPACE"
    else
        echo "WEB_UI_NAMESPACE='$WEB_UI_NAMESPACE'" >> '/usr/local/pia/settings.conf'
    fi
fi
if [ "$WEB_UI_COOKIE_AUTH" = "" ]; then
    # this value is reset when running the setup wizard but let's start with something unknown
    WEB_UI_COOKIE_AUTH=$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c40)
    $CMD_GREP -q 'WEB_UI_COOKIE_AUTH' '/usr/local/pia/settings.conf'
    if [ $? -eq 0 ]; then
        /usr/local/pia/pia-settings 'WEB_UI_COOKIE_AUTH' "$WEB_UI_COOKIE_AUTH"
    else
        echo "WEB_UI_COOKIE_AUTH='$WEB_UI_COOKIE_AUTH'" >> '/usr/local/pia/settings.conf'
    fi
fi


# rebuild autostart.conf to apply new default values from update (pia-update runs pia-setup)
/usr/local/pia/include/autostart_rebuild.sh &> /dev/null

if [ ! -d "/usr/local/pia/cache/" ]; then
    mkdir /usr/local/pia/cache/
    chown -R root:vpnvm /usr/local/pia/cache/
    chmod 0770 /usr/local/pia/cache/
fi




#ALWAYS RUN THIS LAST
chmod 0660 /usr/local/pia/settings.conf
chown -R root:vpnvm /usr/local/pia